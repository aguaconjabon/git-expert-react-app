{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAExCC,EAFwC,KAE5BC,EAF4B,KAqB7C,OACI,sBAAMC,SAZU,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC5BR,GAAc,SAACS,GAAD,OAAkBP,GAAlB,mBAAiCO,OAC/CN,EAAc,MAOd,SACI,uBACEO,KAAK,OACLC,MAAQT,EACRU,SArBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCThBG,EAAO,uCAAI,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0DAC2CC,UAAUH,GADrD,sDAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAS,IAAD,IAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QAXvB,kBAebM,GAfa,4CAAJ,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIT,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAIlC,OAFAI,QAAQC,IAAIN,EAAIT,EAAKU,GAIjB,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCNG,SAASS,EAAT,GAAgC,IAAbrB,EAAY,EAAZA,SAAY,ECAlB,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAQtCC,qBAAU,WACN1B,EAAQC,GACP0B,MAAM,SAAAhB,GACHc,EAAS,CACLjB,KAAMG,EACNY,SAAS,SAInB,CAACtB,IAjBmC,MAoBXd,mBAAS,IApBE,mBAsBtC,OAtBsC,UAsB/BqC,EDpBkBI,CAAa3B,GAA/BO,EAFmC,EAEnCA,KAAMe,EAF6B,EAE7BA,QAEb,OAEI,qCACA,+BAAKtB,EAAL,OACEsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAGcX,EAAKE,KAAK,SAACC,GAAD,OACH,cAAC,EAAD,eAEIA,GADEA,EAAIC,YEThC,IAAMiB,EAAgB,WAAO,IAAD,EAGK1C,mBAAS,CAAC,UAHf,mBAGxBQ,EAHwB,KAGZT,EAHY,KAQ/B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEIS,EAAWe,KAAI,SAAET,GAAF,OACZ,cAACqB,EAAD,CACArB,SAAUA,GADIA,Y,MCrBjC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.022e817f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n    \r\n  const [inputValue, setInputValue] =  useState('');\r\n    \r\n\r\n  const handdleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n  }\r\n\r\n\r\n  const handdleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length> 2) {\r\n        setCategories((categories) => [ inputValue, ...categories] );\r\n        setInputValue('');\r\n      }\r\n\r\n  }\r\n\r\n\r\n    return (\r\n        <form onSubmit = {handdleSubmit }>\r\n            <input\r\n              type=\"text\"\r\n              value ={inputValue}\r\n              onChange = { handdleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs =  async (category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=oACPG25Q8gaIUt5KAjMWo82UDu63G99z`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img  => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium?.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, url, title}) => {\r\n\r\n    console.log(id, url, title);\r\n\r\n    return (\r\n\r\n        <div className='card animate__animated animate__wobble'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport default function GifGrid({ category }) {\r\n\r\n    const {data, loading} =  useFetchGifs(category);\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3>{category} </h3>\r\n        { loading && <p>loafing</p> }\r\n        <div className=\"card-grid\">\r\n\r\n                  { \r\n                      data.map( (img) => (\r\n                             <GifGridItem \r\n                             key={ img.id }\r\n                             {...img}/>\r\n                      ))\r\n                }\r\n\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then( img => {\r\n            setstate({\r\n                data: img,\r\n                loading: false\r\n            });\r\n        });\r\n\r\n   }, [category]);\r\n\r\n\r\n   const [images, setImages] = useState([]);\r\n\r\n    return state;\r\n}","import React ,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['anime']);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2> GiftExpert </h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n           { \r\n                categories.map(( category )=>(\r\n                   <GifGrid key={category }\r\n                   category={category} />\r\n                ))\r\n            }\r\n\r\n            </ol>\r\n          \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}